name: flutter_ci_cd

concurrency:
  group: $-$
  cancel-in-progress: true

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
#  analyze_and_test:
#    name: Analyze And Run Tests
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'zulu'
#          java-version: '11'
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: stable
#          flutter-version: 3.19.6
#          architecture: x64
#      - run: flutter pub get
#
#      - name: Analyze Code
#        run: flutter analyze
#
#      - name: Run Tests
#        run: flutter test


  build_and_deploy:
    name: Build And Deploy
    runs-on: macos-latest
#    needs: analyze_and_test
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.19.6
          architecture: x64
      - run: flutter pub get

      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Setup variables
        run: |
          echo "ANDROID_KEYSTORE_PATH=${{ secrets.ANDROID_KEYSTORE_PATH }}" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_ALIAS=${{ secrets.ANDROID_KEYSTORE_ALIAS }}" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          
      - name: Build APK
        run: flutter build apk --release --split-per-abi --flavor production -t lib/main_production.dart

      - name: Build App Bundle
        run: flutter build appbundle --release --flavor production -t lib/main_production.dart

      - name: Build IPA
        run: |
          flutter build ios --no-codesign --flavor production -t lib/main_production.dart
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Tag
        id: create_tag
        run: |
          git config --global user.email "criistian-14@hotmail.com"
          git config --global user.name "GitHub Actions"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Push to Releases
        uses: actions/upload-artifact@v4
        with:
          name: v${{ env.VERSION }}
          path: |
            build/app/outputs/apk/production/release/*
            build/ios/iphoneos/app.ipa

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.example.app
          releaseFiles: build/app/outputs/bundle/productionRelease/app-production-release.aab
          track: closed # 'internal', 'beta', 'production'
#          whatsNewDirectory: release_notes/
